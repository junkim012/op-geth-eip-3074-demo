/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  HSCompound,
  HSCompoundInterface,
} from "../../../../contracts/handlers/compound/HSCompound";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "CETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPTROLLER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMP_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FCOMPOUND_ACTIONS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MSG_SENDER_KEY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NATIVE_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSTPROCESS_SIG",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenBorrow",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uBorrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "needEnterMarket",
        type: "bool",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "cache",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "enterMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "enterMarkets",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "exitMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "postProcess",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenRepay",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenWithdraw",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "uRepayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cWithdrawAmount",
        type: "uint256",
      },
    ],
    name: "repayBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stack",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122a1806100206000396000f3fe60806040526004361061015f5760003560e01c8063c2722916116100c0578063e9af029211610074578063f5f5ba7211610059578063f5f5ba7214610371578063fa2901a5146103aa578063fffdb6a0146103de57600080fd5b8063e9af02921461034b578063f53cc4b31461035e57600080fd5b8063d9caed12116100a5578063d9caed12146102f0578063dc9031c414610303578063df2ebdbb1461032357600080fd5b8063c2722916146102c0578063d6a898c7146102c857600080fd5b80635f82c67e1161011757806387c13943116100fc57806387c139431461024f57806399eb59b91461026b578063b2b8b7dc1461029857600080fd5b80635f82c67e146102145780638340f5491461023c57600080fd5b80632e528a37116101485780632e528a37146101ae5780634883400d146101c15780634ab45d33146101d457600080fd5b80630f532d181461016457806324991d6614610199575b600080fd5b34801561017057600080fd5b5061018660008051602061227583398151915281565b6040519081526020015b60405180910390f35b6101ac6101a7366004611dd8565b6103f1565b005b6101ac6101bc366004611e1f565b61052f565b6101ac6101cf366004611e8f565b6107f0565b3480156101e057600080fd5b506101fc734ddc2d193948926d02f9b1fe9e1daa0718270ed581565b6040516001600160a01b039091168152602001610190565b34801561022057600080fd5b506101fc733d9819210a31b4961b30ef54be2aed79b9c9cd3b81565b6101ac61024a366004611f17565b6109da565b34801561025b57600080fd5b50610186670de0b6b3a764000081565b34801561027757600080fd5b50610186610286366004611f58565b60016020526000908152604090205481565b3480156102a457600080fd5b506101fc73c00e94cb662c3520282e6f5717214004a7f2688881565b6101ac610a74565b3480156102d457600080fd5b506101fc7305ef8eb657027927fab9b279138f0189cb14497681565b6101ac6102fe366004611f17565b610ac1565b34801561030f57600080fd5b5061018661031e366004611f58565b610bc0565b34801561032f57600080fd5b506101fc73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b610186610359366004611f71565b610be1565b6101ac61036c366004611dd8565b610e50565b34801561037d57600080fd5b50604080518082018252600a8152691214d0dbdb5c1bdd5b9960b21b602082015290516101909190611fe6565b3480156103b657600080fd5b506103c5636139148b60e11b81565b6040516001600160e01b03199091168152602001610190565b6101ac6103ec366004611ff9565b611026565b81600061043360008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b905061051f816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190612054565b6001600160a01b0316146040518060400160405280600781526020017f47656e6572616c000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f4e6f74206f776e6572206f662074686520445350726f787900000000000000008152506113f8565b610529848461140c565b50505050565b85600061057160008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b90506105be816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b84156105cf576105cf888887611550565b82156105df576105df888861140c565b83156107e65760006001600160a01b038716734ddc2d193948926d02f9b1fe9e1daa0718270ed51415610627575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610633565b610630876115c1565b90505b604080516001600160a01b038981166024830152604480830189905283518084039091018152606490920183526020820180516001600160e01b0316634b8a352960e01b1790529151631cff79cd60e01b8152918b1691631cff79cd916106b3917305ef8eb657027927fab9b279138f0189cb1449769190600401612071565b6020604051808303816000875af19250505080156106ee575060408051601f3d908101601f191682019092526106eb91810190612093565b60015b610776576106fa6120ac565b806308c379a01415610748575061070f612103565b8061071a575061074a565b61074260405180604001604052806006815260200165626f72726f7760d01b8152508261162b565b50610778565b505b61077160405180604001604052806006815260200165626f72726f7760d01b815250611686565b610778565b505b6107838982876116c8565b6001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146107e457600080546001810182559080526001600160a01b0382167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563909101555b505b5050505050505050565b82600061083260008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b905061087f816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b846001600160a01b0316631cff79cd7305ef8eb657027927fab9b279138f0189cb14497663c299823887876040516024016108bb92919061218d565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b03191682526109029291600401612071565b6020604051808303816000875af192505050801561093d575060408051601f3d908101601f1916820190925261093a91810190612093565b60015b6109d1576109496120ac565b806308c379a0141561099d575061095e612103565b80610969575061099f565b6109976040518060400160405280600c81526020016b656e7465724d61726b65747360a01b8152508261162b565b506109d3565b505b6109cc6040518060400160405280600c81526020016b656e7465724d61726b65747360a01b815250611686565b6109d3565b505b5050505050565b826000610a1c60008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b9050610a69816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b6109d3858585611550565b60405162461bcd60e51b815260206004820152601460248201527f496e76616c696420706f73742070726f6365737300000000000000000000000060448201526064015b60405180910390fd5b826000610b0360008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b9050610b50816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b610b5b8585856116c8565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146109d357600080546001810182559080526001600160a01b0385167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563909101556109d3565b60008181548110610bd057600080fd5b600091825260209091200154905081565b6000816000610c2560008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b9050610c72816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b6040516374d7814960e11b81526001600160a01b0385166004820152733d9819210a31b4961b30ef54be2aed79b9c9cd3b9063e9af029290602401600060405180830381600087803b158015610cc757600080fd5b505af1925050508015610cd8575060015b610d6157610ce46120ac565b806308c379a01415610d355750610cf9612103565b80610d045750610d37565b610d2f604051806040016040528060098152602001680636c61696d436f6d760bc1b8152508261162b565b50610d61565b505b610d61604051806040016040528060098152602001680636c61696d436f6d760bc1b815250611686565b6040516370a0823160e01b81526001600160a01b038516600482015260009073c00e94cb662c3520282e6f5717214004a7f26888906370a0823190602401602060405180830381865afa158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de09190612093565b9050610e018573c00e94cb662c3520282e6f5717214004a7f26888836116c8565b6000805460018101825590805273c00e94cb662c3520282e6f5717214004a7f268887f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910155949350505050565b816000610e9260008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b9050610edf816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316630ede4edd60e41b1790529151631cff79cd60e01b815291861691631cff79cd91610f5b917305ef8eb657027927fab9b279138f0189cb1449769190600401612071565b6020604051808303816000875af1925050508015610f96575060408051601f3d908101601f19168201909252610f9391810190612093565b60015b6109d357610fa26120ac565b806308c379a01415610ff45750610fb7612103565b80610fc25750610ff6565b610fee6040518060400160405280600a815260200169195e1a5d13585c9ad95d60b21b8152508261162b565b50610529565b505b6110216040518060400160405280600a815260200169195e1a5d13585c9ad95d60b21b815250611686565b610529565b84600061106860008051602061227583398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b90506110b5816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b83156113a1576001600160a01b038616734ddc2d193948926d02f9b1fe9e1daa0718270ed5141561122e57604080516001600160a01b038881166024830152604480830188905283518084039091018152606490920183526020820180516001600160e01b031663157b6bd560e31b1790529151631cff79cd60e01b815291891691631cff79cd918791611161917305ef8eb657027927fab9b279138f0189cb14497691600401612071565b60206040518083038185885af19350505050801561119c575060408051601f3d908101601f1916820190925261119991810190612093565b60015b6111f5576111a86120ac565b806308c379a014156111fb57506111bd612103565b806111c857506111fd565b6111f56040518060400160405280600b81526020016a7265706179426f72726f7760a81b8152508261162b565b506113a1565b505b6112296040518060400160405280600b81526020016a7265706179426f72726f7760a81b815250611686565b6113a1565b6000611239876115c1565b9050611246818987611806565b604080516001600160a01b038981166024830152604480830189905283518084039091018152606490920183526020820180516001600160e01b031663157b6bd560e31b1790529151631cff79cd60e01b8152918a1691631cff79cd916112c6917305ef8eb657027927fab9b279138f0189cb1449769190600401612071565b6020604051808303816000875af1925050508015611301575060408051601f3d908101601f191682019092526112fe91810190612093565b60015b6113935761130d6120ac565b806308c379a014156113605750611322612103565b8061132d5750611362565b61135a6040518060400160405280600b81526020016a7265706179426f72726f7760a81b8152508261162b565b50611395565b505b61138e6040518060400160405280600b81526020016a7265706179426f72726f7760a81b815250611686565b611395565b505b61139f818961188e565b505b82156113ef576113b28786856116c8565b600080546001810182559080526001600160a01b0386167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563909101555b50505050505050565b8261140757611407828261162b565b505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316633fe5d42560e01b1790529151631cff79cd60e01b815291841691631cff79cd91611488917305ef8eb657027927fab9b279138f0189cb1449769190600401612071565b6020604051808303816000875af19250505080156114c3575060408051601f3d908101601f191682019092526114c091810190612093565b60015b611407576114cf6120ac565b806308c379a0141561151d57506114e4612103565b806114ef575061151f565b6114076040518060400160405280600c81526020016b17d95b9d195c93585c9ad95d60a21b8152508261162b565b505b61154c6040518060400160405280600c81526020016b17d95b9d195c93585c9ad95d60a21b815250611686565b5050565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156115ad5760405183906001600160a01b0382169083156108fc029084906000818181858888f193505050501580156109d3573d6000803e3d6000fd5b6114076001600160a01b03831684836119c5565b6000816001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116259190612054565b92915050565b60408051808201909152600a8152691214d0dbdb5c1bdd5b9960b21b60208201528282604051602001611660939291906121db565b60408051601f198184030181529082905262461bcd60e51b8252610ab891600401611fe6565b6116c5816040518060400160405280600b81526020017f556e73706563696669656400000000000000000000000000000000000000000081525061162b565b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663f3fef3a360e01b1790529151631cff79cd60e01b815291851691631cff79cd91611748917305ef8eb657027927fab9b279138f0189cb1449769190600401612071565b6020604051808303816000875af1925050508015611783575060408051601f3d908101601f1916820190925261178091810190612093565b60015b6105295761178f6120ac565b806308c379a014156117da57506117a4612103565b806117af57506117dc565b610529604051806040016040528060098152602001685f776974686472617760b81b8152508261162b565b505b611407604051806040016040528060098152602001685f776974686472617760b81b815250611686565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401600060405180830381600087803b15801561185057600080fd5b505af1925050508015611861575060015b6114075761187a6001600160a01b038416836000611a28565b6114076001600160a01b0384168383611a28565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa1580156118de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119029190612093565b111561154c5760405163095ea7b360e01b81526001600160a01b0382811660048301526000602483015283169063095ea7b390604401600060405180830381600087803b15801561195257600080fd5b505af1925050508015611963575060015b61154c5760405163095ea7b360e01b81526001600160a01b0382811660048301526001602483015283169063095ea7b390604401600060405180830381600087803b1580156119b157600080fd5b505af11580156109d1573d6000803e3d6000fd5b6040516001600160a01b03831660248201526044810182905261140790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b44565b801580611aa25750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa09190612093565b155b611b145760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610ab8565b6040516001600160a01b03831660248201526044810182905261140790849063095ea7b360e01b906064016119f1565b6000611b99826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c299092919063ffffffff16565b8051909150156114075780806020019051810190611bb7919061223b565b6114075760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610ab8565b6060611c388484600085611c42565b90505b9392505050565b606082471015611cba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610ab8565b6001600160a01b0385163b611d115760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ab8565b600080866001600160a01b03168587604051611d2d9190612258565b60006040518083038185875af1925050503d8060008114611d6a576040519150601f19603f3d011682016040523d82523d6000602084013e611d6f565b606091505b5091509150611d7f828286611d8a565b979650505050505050565b60608315611d99575081611c3b565b825115611da95782518084602001fd5b8160405162461bcd60e51b8152600401610ab89190611fe6565b6001600160a01b03811681146116c557600080fd5b60008060408385031215611deb57600080fd5b8235611df681611dc3565b91506020830135611e0681611dc3565b809150509250929050565b80151581146116c557600080fd5b60008060008060008060c08789031215611e3857600080fd5b8635611e4381611dc3565b95506020870135611e5381611dc3565b94506040870135611e6381611dc3565b9350606087013592506080870135915060a0870135611e8181611e11565b809150509295509295509295565b600080600060408486031215611ea457600080fd5b8335611eaf81611dc3565b9250602084013567ffffffffffffffff80821115611ecc57600080fd5b818601915086601f830112611ee057600080fd5b813581811115611eef57600080fd5b8760208260051b8501011115611f0457600080fd5b6020830194508093505050509250925092565b600080600060608486031215611f2c57600080fd5b8335611f3781611dc3565b92506020840135611f4781611dc3565b929592945050506040919091013590565b600060208284031215611f6a57600080fd5b5035919050565b600060208284031215611f8357600080fd5b8135611c3b81611dc3565b60005b83811015611fa9578181015183820152602001611f91565b838111156105295750506000910152565b60008151808452611fd2816020860160208601611f8e565b601f01601f19169290920160200192915050565b602081526000611c3b6020830184611fba565b600080600080600060a0868803121561201157600080fd5b853561201c81611dc3565b9450602086013561202c81611dc3565b9350604086013561203c81611dc3565b94979396509394606081013594506080013592915050565b60006020828403121561206657600080fd5b8151611c3b81611dc3565b6001600160a01b0383168152604060208201526000611c386040830184611fba565b6000602082840312156120a557600080fd5b5051919050565b600060033d11156120c55760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff811182821017156120fc57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156121115790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561214157505050505090565b82850191508151818111156121595750505050505090565b843d87010160208285010111156121735750505050505090565b612182602082860101876120c8565b509095945050505050565b60208082528181018390526000908460408401835b868110156121d05782356121b581611dc3565b6001600160a01b0316825291830191908301906001016121a2565b509695505050505050565b600084516121ed818460208901611f8e565b605f60f81b908301908152845161220b816001840160208901611f8e565b6101d160f51b60019290910191820152835161222e816003840160208801611f8e565b0160030195945050505050565b60006020828403121561224d57600080fd5b8151611c3b81611e11565b6000825161226a818460208701611f8e565b919091019291505056feb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453aa164736f6c634300080a000a";

type HSCompoundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HSCompoundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HSCompound__factory extends ContractFactory {
  constructor(...args: HSCompoundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HSCompound> {
    return super.deploy(overrides || {}) as Promise<HSCompound>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HSCompound {
    return super.attach(address) as HSCompound;
  }
  override connect(signer: Signer): HSCompound__factory {
    return super.connect(signer) as HSCompound__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HSCompoundInterface {
    return new utils.Interface(_abi) as HSCompoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HSCompound {
    return new Contract(address, _abi, signerOrProvider) as HSCompound;
  }
}
