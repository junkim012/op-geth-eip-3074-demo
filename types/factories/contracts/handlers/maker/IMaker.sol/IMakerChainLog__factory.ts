/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IMakerChainLog,
  IMakerChainLogInterface,
} from "../../../../../contracts/handlers/maker/IMaker.sol/IMakerChainLog";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IMakerChainLog__factory {
  static readonly abi = _abi;
  static createInterface(): IMakerChainLogInterface {
    return new utils.Interface(_abi) as IMakerChainLogInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMakerChainLog {
    return new Contract(address, _abi, signerOrProvider) as IMakerChainLog;
  }
}
