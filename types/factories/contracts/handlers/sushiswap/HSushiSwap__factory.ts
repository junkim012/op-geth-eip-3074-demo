/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  HSushiSwap,
  HSushiSwapInterface,
} from "../../../../contracts/handlers/sushiswap/HSushiSwap";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "MSG_SENDER_KEY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NATIVE_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSTPROCESS_SIG",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUSHISWAP_ROUTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "cache",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "postProcess",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stack",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612b76806100206000396000f3fe6080604052600436106101445760003560e01c806399eb59b9116100c0578063df2ebdbb11610074578063ef66f72511610059578063ef66f72514610346578063f5f5ba7214610359578063fa2901a51461039257600080fd5b8063df2ebdbb1461030b578063e2dc85dc1461033357600080fd5b8063c2722916116100a5578063c2722916146102ce578063d0241dac146102d8578063dc9031c4146102eb57600080fd5b806399eb59b914610279578063a1cfacde146102a657600080fd5b8063397d4b4a1161011757806386818f26116100fc57806386818f261461023757806387151a791461024a57806387c139431461025d57600080fd5b8063397d4b4a1461021157806358871c811461022457600080fd5b80630f532d181461014957806318a22c4014610190578063277754ed146101a35780633351733f146101e3575b600080fd5b34801561015557600080fd5b5061017d7fb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453a81565b6040519081526020015b60405180910390f35b61017d61019e36600461257a565b6103de565b3480156101af57600080fd5b506101cb73d9e1ce17f2641f24ae83637ab66a2cca9c378b9f81565b6040516001600160a01b039091168152602001610187565b6101f66101f1366004612612565b61062a565b60408051938452602084019290925290820152606001610187565b61017d61021f36600461257a565b6108bf565b6101f661023236600461266b565b610b7d565b61017d61024536600461257a565b610e2e565b61017d61025836600461257a565b61107c565b34801561026957600080fd5b5061017d670de0b6b3a764000081565b34801561028557600080fd5b5061017d6102943660046126b3565b60016020526000908152604090205481565b6102b96102b43660046126cc565b6112cb565b60408051928352602083019190915201610187565b6102d661155e565b005b61017d6102e636600461257a565b6115ab565b3480156102f757600080fd5b5061017d6103063660046126b3565b6117ae565b34801561031757600080fd5b506101cb73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6102b9610341366004612707565b6117cf565b61017d61035436600461257a565b611a54565b34801561036557600080fd5b50604080518082018252600a8152690485375736869537761760b41b60208201529051610187919061276a565b34801561039e57600080fd5b506103ad636139148b60e11b81565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610187565b600061044b60028484905010156040518060400160405280601581526020017f73776170546f6b656e73466f72457861637445544800000000000000000000008152506040518060400160405280600c81526020016b0d2dcecc2d8d2c840e0c2e8d60a31b815250611c6d565b6000838360008181106104605761046061279d565b905060200201602081019061047591906127b3565b905073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f6104968287611c81565b95506104b78273d9e1ce17f2641f24ae83637ab66a2cca9c378b9f88611d42565b604051632512eca560e11b81526001600160a01b03821690634a25d94a906104ed908a908a908a908a9030904290600401612819565b6000604051808303816000875af192505050801561052d57506040513d6000823e601f3d908101601f1916820160405261052a919081019061289a565b60015b6105e357610539612941565b806308c379a0141561059e575061054e61295d565b8061055957506105a0565b6105986040518060400160405280601581526020017f73776170546f6b656e73466f724578616374455448000000000000000000000081525082611dca565b50610602565b505b6105de6040518060400160405280601581526020017f73776170546f6b656e73466f7245786163744554480000000000000000000000815250611e25565b610602565b806000815181106105f6576105f661279d565b60200260200101519350505b6106208273d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b5050949350505050565b6000808073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f61064d8a89611c81565b97506106598988611c81565b965061067a8a73d9e1ce17f2641f24ae83637ab66a2cca9c378b9f8a611d42565b6106998973d9e1ce17f2641f24ae83637ab66a2cca9c378b9f89611d42565b60405162e8e33760e81b81526001600160a01b038b811660048301528a81166024830152604482018a9052606482018990526084820188905260a482018790523060c48301524260e483015282169063e8e3370090610104016060604051808303816000875af192505050801561072d575060408051601f3d908101601f1916820190925261072a918101906129e7565b60015b6107c157610739612941565b806308c379a0141561078d575061074e61295d565b80610759575061078f565b6107876040518060400160405280600c81526020016b6164644c697175696469747960a01b81525082611dca565b506107c9565b505b6107bc6040518060400160405280600c81526020016b6164644c697175696469747960a01b815250611e25565b6107c9565b919550935091505b6107e78a73d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b6108058973d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b6000610873826001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190612a15565b8c8c611fa7565b600080546001810182559080526001600160a01b0382167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563909101559050505096509650969350505050565b600061092c60028484905010156040518060400160405280601881526020017f73776170546f6b656e73466f724578616374546f6b656e7300000000000000008152506040518060400160405280600c81526020016b0d2dcecc2d8d2c840e0c2e8d60a31b815250611c6d565b6000838360008181106109415761094161279d565b905060200201602081019061095691906127b3565b905060008484610967600182612a32565b8181106109765761097661279d565b905060200201602081019061098b91906127b3565b905073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f6109ac8388611c81565b96506109cd8373d9e1ce17f2641f24ae83637ab66a2cca9c378b9f89611d42565b604051634401edf760e11b81526001600160a01b03821690638803dbee90610a03908b908b908b908b9030904290600401612819565b6000604051808303816000875af1925050508015610a4357506040513d6000823e601f3d908101601f19168201604052610a40919081019061289a565b60015b610af957610a4f612941565b806308c379a01415610ab45750610a6461295d565b80610a6f5750610ab6565b610aae6040518060400160405280601881526020017f73776170546f6b656e73466f724578616374546f6b656e73000000000000000081525082611dca565b50610b18565b505b610af46040518060400160405280601881526020017f73776170546f6b656e73466f724578616374546f6b656e730000000000000000815250611e25565b610b18565b80600081518110610b0c57610b0c61279d565b60200260200101519450505b610b368373d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b600080546001810182559080526001600160a01b0383167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910155505050949350505050565b6000808073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f610ba0828a611c81565b9850610bac8888611c81565b9650610bcd8873d9e1ce17f2641f24ae83637ab66a2cca9c378b9f89611d42565b60405163f305d71960e01b81526001600160a01b0389811660048301526024820189905260448201889052606482018790523060848301524260a483015282169063f305d719908b9060c40160606040518083038185885af193505050508015610c54575060408051601f3d908101601f19168201909252610c51918101906129e7565b60015b610cee57610c60612941565b806308c379a01415610cb75750610c7561295d565b80610c805750610cb9565b610cb16040518060400160405280600f81526020016e0c2c8c898d2e2ead2c8d2e8f28aa89608b1b81525082611dca565b50610cf6565b505b610ce96040518060400160405280600f81526020016e0c2c8c898d2e2ead2c8d2e8f28aa89608b1b815250611e25565b610cf6565b919550935091505b610d148873d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b6000610de3826001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b9190612a15565b8a846001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde9190612a15565b611fa7565b600080546001810182559080526001600160a01b0382167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015590505050955095509592505050565b6000610e9b60028484905010156040518060400160405280601881526020017f737761704578616374546f6b656e73466f72546f6b656e7300000000000000008152506040518060400160405280600c81526020016b0d2dcecc2d8d2c840e0c2e8d60a31b815250611c6d565b600083836000818110610eb057610eb061279d565b9050602002016020810190610ec591906127b3565b905060008484610ed6600182612a32565b818110610ee557610ee561279d565b9050602002016020810190610efa91906127b3565b905073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f610f1b8389611c81565b9750610f3c8373d9e1ce17f2641f24ae83637ab66a2cca9c378b9f8a611d42565b6040516338ed173960e01b81526001600160a01b038216906338ed173990610f72908b908b908b908b9030904290600401612819565b6000604051808303816000875af1925050508015610fb257506040513d6000823e601f3d908101601f19168201604052610faf919081019061289a565b60015b61105d57610fbe612941565b806308c379a0141561101d5750610fd361295d565b80610fde575061101f565b610aae6040518060400160405280601881526020017f737761704578616374546f6b656e73466f72546f6b656e73000000000000000081525082611dca565b505b610af46040518060400160405280601881526020017f737761704578616374546f6b656e73466f72546f6b656e730000000000000000815250611e25565b806001825161106c9190612a32565b81518110610b0c57610b0c61279d565b60006110e960028484905010156040518060400160405280601581526020017f73776170455448466f724578616374546f6b656e7300000000000000000000008152506040518060400160405280600c81526020016b0d2dcecc2d8d2c840e0c2e8d60a31b815250611c6d565b600083836110f8600182612a32565b8181106111075761110761279d565b905060200201602081019061111c91906127b3565b905073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f61113e600088611c81565b9650806001600160a01b031663fb3bdb418888888830426040518763ffffffff1660e01b8152600401611175959493929190612a57565b60006040518083038185885af1935050505080156111b557506040513d6000823e601f3d908101601f191682016040526111b2919081019061289a565b60015b61126b576111c1612941565b806308c379a0141561122657506111d661295d565b806111e15750611228565b6112206040518060400160405280601581526020017f73776170455448466f724578616374546f6b656e73000000000000000000000081525082611dca565b5061128a565b505b6112666040518060400160405280601581526020017f73776170455448466f724578616374546f6b656e730000000000000000000000815250611e25565b61128a565b8060008151811061127e5761127e61279d565b60200260200101519350505b600080546001810182559080526001600160a01b0383167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910155610620565b600080600073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f9050600061138d826001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e9190612a15565b89846001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dba573d6000803e3d6000fd5b90506113998188611c81565b96506113ba8173d9e1ce17f2641f24ae83637ab66a2cca9c378b9f89611d42565b604051629d473b60e21b81526001600160a01b0389811660048301526024820189905260448201889052606482018790523060848301524260a48301528316906302751cec9060c40160408051808303816000875af192505050801561143d575060408051601f3d908101601f1916820190925261143a91810190612a8e565b60015b6114f357611449612941565b806308c379a014156114ae575061145e61295d565b8061146957506114b0565b6114a86040518060400160405280601281526020017f72656d6f76654c6971756964697479455448000000000000000000000000000081525082611dca565b506114f9565b505b6114ee6040518060400160405280601281526020017f72656d6f76654c69717569646974794554480000000000000000000000000000815250611e25565b6114f9565b90945092505b6115178173d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b600080546001810182559080526001600160a01b0389167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910155505094509492505050565b60405162461bcd60e51b815260206004820152601460248201527f496e76616c696420706f73742070726f6365737300000000000000000000000060448201526064015b60405180910390fd5b600061161860028484905010156040518060400160405280601581526020017f737761704578616374455448466f72546f6b656e7300000000000000000000008152506040518060400160405280600c81526020016b0d2dcecc2d8d2c840e0c2e8d60a31b815250611c6d565b60008383611627600182612a32565b8181106116365761163661279d565b905060200201602081019061164b91906127b3565b905073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f61166d600088611c81565b9650806001600160a01b0316637ff36ab58888888830426040518763ffffffff1660e01b81526004016116a4959493929190612a57565b60006040518083038185885af1935050505080156116e457506040513d6000823e601f3d908101601f191682016040526116e1919081019061289a565b60015b61178f576116f0612941565b806308c379a0141561174f575061170561295d565b806117105750611751565b6112206040518060400160405280601581526020017f737761704578616374455448466f72546f6b656e73000000000000000000000081525082611dca565b505b6112666040518060400160405280601581526020017f737761704578616374455448466f72546f6b656e730000000000000000000000815250611e25565b806001825161179e9190612a32565b8151811061127e5761127e61279d565b600081815481106117be57600080fd5b600091825260209091200154905081565b600080600073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f90506000611859826001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561182e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118529190612a15565b8a8a611fa7565b90506118658188611c81565b96506118868173d9e1ce17f2641f24ae83637ab66a2cca9c378b9f89611d42565b604051635d5155ef60e11b81526001600160a01b038a8116600483015289811660248301526044820189905260648201889052608482018790523060a48301524260c483015283169063baa2abde9060e40160408051808303816000875af1925050508015611912575060408051601f3d908101601f1916820190925261190f91810190612a8e565b60015b6119ac5761191e612941565b806308c379a01415611975575061193361295d565b8061193e5750611977565b61196f6040518060400160405280600f81526020016e72656d6f76654c697175696469747960881b81525082611dca565b506119b2565b505b6119a76040518060400160405280600f81526020016e72656d6f76654c697175696469747960881b815250611e25565b6119b2565b90945092505b6119d08173d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611e67565b600080546001810182559080526001600160a01b038a167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910155600080546001810182559080526001600160a01b0389167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015550509550959350505050565b6000611ac160028484905010156040518060400160405280601581526020017f737761704578616374546f6b656e73466f7245544800000000000000000000008152506040518060400160405280600c81526020016b0d2dcecc2d8d2c840e0c2e8d60a31b815250611c6d565b600083836000818110611ad657611ad661279d565b9050602002016020810190611aeb91906127b3565b905073d9e1ce17f2641f24ae83637ab66a2cca9c378b9f611b0c8288611c81565b9650611b2d8273d9e1ce17f2641f24ae83637ab66a2cca9c378b9f89611d42565b6040516318cbafe560e01b81526001600160a01b038216906318cbafe590611b63908a908a908a908a9030904290600401612819565b6000604051808303816000875af1925050508015611ba357506040513d6000823e601f3d908101601f19168201604052611ba0919081019061289a565b60015b611c4e57611baf612941565b806308c379a01415611c0e5750611bc461295d565b80611bcf5750611c10565b6105986040518060400160405280601581526020017f737761704578616374546f6b656e73466f72455448000000000000000000000081525082611dca565b505b6105de6040518060400160405280601581526020017f737761704578616374546f6b656e73466f724554480000000000000000000000815250611e25565b8060018251611c5d9190612a32565b815181106105f6576105f661279d565b82611c7c57611c7c8282611dca565b505050565b60006000198214611c93575080611d3c565b6001600160a01b0383161580611cc557506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee145b15611cd1575047611d3c565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d399190612ab2565b90505b92915050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401600060405180830381600087803b158015611d8c57600080fd5b505af1925050508015611d9d575060015b611c7c57611db66001600160a01b038416836000612098565b611c7c6001600160a01b0384168383612098565b60408051808201909152600a8152690485375736869537761760b41b60208201528282604051602001611dff93929190612acb565b60408051601f198184030181529082905262461bcd60e51b82526115a29160040161276a565b611e64816040518060400160405280600b81526020017f556e737065636966696564000000000000000000000000000000000000000000815250611dca565b50565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa158015611eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edb9190612ab2565b1115611fa35760405163095ea7b360e01b81526001600160a01b0382811660048301526000602483015283169063095ea7b390604401600060405180830381600087803b158015611f2b57600080fd5b505af1925050508015611f3c575060015b611fa35760405163095ea7b360e01b81526001600160a01b0382811660048301526001602483015283169063095ea7b390604401600060405180830381600087803b158015611f8a57600080fd5b505af1158015611f9e573d6000803e3d6000fd5b505050505b5050565b6000806000611fb685856121eb565b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b16603482015291935091508690604801604051602081830303815290604052805190602001206040516020016120769291907fff00000000000000000000000000000000000000000000000000000000000000815260609290921b6bffffffffffffffffffffffff1916600183015260158201527fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303603582015260550190565b60408051601f1981840301815291905280516020909101209695505050505050565b8015806121125750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156120ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121109190612ab2565b155b6121845760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016115a2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b179052611c7c9084906122fb565b600080826001600160a01b0316846001600160a01b031614156122765760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f4144445260448201527f455353455300000000000000000000000000000000000000000000000000000060648201526084016115a2565b826001600160a01b0316846001600160a01b031610612296578284612299565b83835b90925090506001600160a01b0382166122f45760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f41444452455353000060448201526064016115a2565b9250929050565b6000612350826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123e09092919063ffffffff16565b805190915015611c7c578080602001905181019061236e9190612b2b565b611c7c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016115a2565b60606123ef84846000856123f9565b90505b9392505050565b6060824710156124715760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016115a2565b6001600160a01b0385163b6124c85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016115a2565b600080866001600160a01b031685876040516124e49190612b4d565b60006040518083038185875af1925050503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b5091509150612536828286612541565b979650505050505050565b606083156125505750816123f2565b8251156125605782518084602001fd5b8160405162461bcd60e51b81526004016115a2919061276a565b6000806000806060858703121561259057600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156125b657600080fd5b818701915087601f8301126125ca57600080fd5b8135818111156125d957600080fd5b8860208260051b85010111156125ee57600080fd5b95989497505060200194505050565b6001600160a01b0381168114611e6457600080fd5b60008060008060008060c0878903121561262b57600080fd5b8635612636816125fd565b95506020870135612646816125fd565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080600060a0868803121561268357600080fd5b853594506020860135612695816125fd565b94979496505050506040830135926060810135926080909101359150565b6000602082840312156126c557600080fd5b5035919050565b600080600080608085870312156126e257600080fd5b84356126ed816125fd565b966020860135965060408601359560600135945092505050565b600080600080600060a0868803121561271f57600080fd5b853561272a816125fd565b94506020860135612695816125fd565b60005b8381101561275557818101518382015260200161273d565b83811115612764576000848401525b50505050565b602081526000825180602084015261278981604085016020870161273a565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156127c557600080fd5b81356123f2816125fd565b8183526000602080850194508260005b8581101561280e5781356127f3816125fd565b6001600160a01b0316875295820195908201906001016127e0565b509495945050505050565b86815285602082015260a06040820152600061283960a0830186886127d0565b6001600160a01b039490941660608301525060800152949350505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561289357612893612857565b6040525050565b600060208083850312156128ad57600080fd5b825167ffffffffffffffff808211156128c557600080fd5b818501915085601f8301126128d957600080fd5b8151818111156128eb576128eb612857565b8060051b91506040516129008584018261286d565b8181529183018401918481018884111561291957600080fd5b938501935b83851015612935578451815293850193850161291e565b50979650505050505050565b600060033d111561295a5760046000803e5060005160e01c5b90565b600060443d101561296b5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561299b57505050505090565b82850191508151818111156129b35750505050505090565b843d87010160208285010111156129cd5750505050505090565b6129dc6020828601018761286d565b509095945050505050565b6000806000606084860312156129fc57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215612a2757600080fd5b81516123f2816125fd565b600082821015612a5257634e487b7160e01b600052601160045260246000fd5b500390565b858152608060208201526000612a716080830186886127d0565b6001600160a01b0394909416604083015250606001529392505050565b60008060408385031215612aa157600080fd5b505080516020909101519092909150565b600060208284031215612ac457600080fd5b5051919050565b60008451612add81846020890161273a565b605f60f81b9083019081528451612afb81600184016020890161273a565b6101d160f51b600192909101918201528351612b1e81600384016020880161273a565b0160030195945050505050565b600060208284031215612b3d57600080fd5b815180151581146123f257600080fd5b60008251612b5f81846020870161273a565b919091019291505056fea164736f6c634300080a000a";

type HSushiSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HSushiSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HSushiSwap__factory extends ContractFactory {
  constructor(...args: HSushiSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HSushiSwap> {
    return super.deploy(overrides || {}) as Promise<HSushiSwap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HSushiSwap {
    return super.attach(address) as HSushiSwap;
  }
  override connect(signer: Signer): HSushiSwap__factory {
    return super.connect(signer) as HSushiSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HSushiSwapInterface {
    return new utils.Interface(_abi) as HSushiSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HSushiSwap {
    return new Contract(address, _abi, signerOrProvider) as HSushiSwap;
  }
}
